// please paste your code for the first answer


#include <iostream>
using namespace std;

int main() {
    int testCases;
    cin >> testCases; // Number of test cases

    while (testCases--) {
        int n;
        cin >> n; // Weight of the pulp in kgs

        // 1 kg of pulp can make 1000 pages, and each notebook consists of 100 pages.
        int notebooks = (N * 1000) / 100;

        cout << notebooks << endl;
    }

    return 0;
}


Approach:

For each test case, we are given n kilograms of pulp.

Since 1 kg of pulp can produce 1000 pages, and each notebook consists of 100 pages, the number of notebooks we can create is simply:

notebooks = (n*1000)/100 or n*10

Time Complexity:

The time complexity is o(testCases)
testCases is the number of test cases. For each test case, we perform constant-time arithmetic operations.

Space Complexity:

The space complexity is O(1)
O(1) if we ignore the input/output storage, as we're only storing a few integers at any point in time.
